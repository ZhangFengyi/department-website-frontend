!function (e) {
    'use strict';
    e.module('ng-pagination', [
    ]).constant('ngPaginationConfig', {
        visiblePageCount: 10,
        firstText: 'First',
        lastText: 'Last',
        prevText: 'Prev',
        nextText: 'Next',
        showIfOnePage: !1,
        showFirstLastText: !0,
        gotoText: 'Goto Page',
        totalText: 'Total Page',
        stripText: 'Strip Text',
        pageSizeText: 'Page Size',
        pageSize: 10,
        showGoto: !1
    }).directive('pager', [
        'ngPaginationConfig',
        function (t) {
            return {
                link: function (n, a, g) {
                    function i() {
                        var e,
                        t,
                        a;
                        if (n.pagenums = [
                        ], 0 !== n.pageCount) for (n.currentPage > n.pageCount && (n.currentPage = 1), n.pageCount <= o ? (e = 1, t = n.pageCount)  : (a = Math.ceil(o / 2), e = Math.max(n.currentPage - a, 1), t = Math.min(e + o - 1, n.pageCount), n.pageCount - t < a && (e = t - o + 1)); t >= e; e++) n.pagenums.push(e)
                    }
                    var o = e.isDefined(g.visiblePageCount) ? g.visiblePageCount : t.visiblePageCount;
                    n.firstText = e.isDefined(g.firstText) ? g.firstText : t.firstText,
                    n.lastText = e.isDefined(g.lastText) ? g.lastText : t.lastText,
                    n.prevText = e.isDefined(g.prevText) ? g.prevText : t.prevText,
                    n.nextText = e.isDefined(g.nextText) ? g.nextText : t.nextText,
                    n.showFirstLastText = e.isDefined(g.showFirstLastText) ? g.showFirstLastText : t.showFirstLastText,
                    n.showIfOnePage = e.isDefined(g.showIfOnePage) ? g.showIfOnePage : t.showIfOnePage,
                    n.gotoText = e.isDefined(g.gotoText) ? g.gotoText : t.gotoText,
                    n.totalText = e.isDefined(g.totalText) ? g.totalText : t.totalText,
                    n.stripText = e.isDefined(g.stripText) ? g.stripText : t.stripText,
                    n.pageSizeText = e.isDefined(g.pageSizeText) ? g.pageSizeText : t.pageSizeText,
                    n.showGoto = e.isDefined(g.showGoto) ? g.showGoto : t.showGoto,
                    n.currentPage = 1,
                    n.pageChange = function (e) {
                        e >= 1 && e <= n.pageCount ? n.currentPage = e : n.currentPage = 1
                    },
                    n.keyupHanlder = function (e) {
                    	var reg = new RegExp("^[0-9]*$");
                    	var t = e.target.value;
                    	if(!reg.test(t)){
                            alert("请输入数字!");
                            e.target.value = "";
                            return;
                        }
                        a = parseInt(t, 10);
                        if (Number.isNaN(a)) {
                            if (!e.preventDefault) return !1;
                            e.preventDefault()
                        } else a >= 1 && a <= n.pageCount || (1 > a ? e.target.value = 1 : e.target.value = n.pageCount),
                        13 === e.keyCode && (n.currentPage = a)
                    },
                    n.$watch('currentPage', function (e, t) {
                        e !== t && (i(), n.onPageChange())
                    }),
                    n.$watch('pageCount', function (e, t) {
                        e && i()
                    }),
                    n.select = function (e) {
                        n.pageSize = e.pageSize;
                    },
                    n.$watch('pageSize', function (e, t) {
                        e !== t && (n.pageChange(1), n.onPageChange())
                    })
                },
                replace: !0,
                restrict: 'E',
                scope: {
                    pageCount: '=',
                    currentPage: '=',
                    totalPage: '=',
                    pageSize: '=',
                    pageSizeList: "=",
                    onPageChange: '&'
                },
                template: '<div class="ng-pagination"><ul ng-if="pageCount>=1 || showIfOnePage"><li ng-click="pageChange(1)" ng-if="showFirstLastText">{{firstText}}</li><li ng-click="pageChange(currentPage-1>0?currentPage-1:1)">{{prevText}}</li><li ng-repeat="pagenum in pagenums track by pagenum" ng-click="pageChange(pagenum)" ng-class="{active:currentPage===pagenum}">{{pagenum}}</li><li ng-click="pageChange(currentPage+1<=pageCount?currentPage+1:pageCount)">{{nextText}}</li><li ng-click="pageChange(pageCount)" ng-if="showFirstLastText">{{lastText}}</li></ul><label ng-if="showGoto">&nbsp;&nbsp;&nbsp;&nbsp;{{gotoText}}<input type="text" ng-keyup="keyupHanlder($event)"></label>&nbsp;&nbsp;&nbsp;&nbsp;<li ng-if="totalText">{{totalText}}</li><li>{{totalPage}}</li><li ng-if="stripText">{{stripText}}&nbsp;&nbsp;&nbsp;&nbsp;</li><label ng-if="pageSize">{{pageSizeText}}<select class="form-control" ng-model="pageSize" ng-options="x for x in pageSizeList" title="{{pageSizeText}}" ng-change="select(this)"></select></label></div>'
            }
        }
    ])
}(angular);
