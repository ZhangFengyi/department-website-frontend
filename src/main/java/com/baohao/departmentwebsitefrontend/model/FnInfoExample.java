package com.baohao.departmentwebsitefrontend.model;

import java.util.ArrayList;
import java.util.List;

public class FnInfoExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table fn_info
     *
     * @mbg.generated
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table fn_info
     *
     * @mbg.generated
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table fn_info
     *
     * @mbg.generated
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table fn_info
     *
     * @mbg.generated
     */
    public FnInfoExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table fn_info
     *
     * @mbg.generated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table fn_info
     *
     * @mbg.generated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table fn_info
     *
     * @mbg.generated
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table fn_info
     *
     * @mbg.generated
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table fn_info
     *
     * @mbg.generated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table fn_info
     *
     * @mbg.generated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table fn_info
     *
     * @mbg.generated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table fn_info
     *
     * @mbg.generated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table fn_info
     *
     * @mbg.generated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table fn_info
     *
     * @mbg.generated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table fn_info
     *
     * @mbg.generated
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andFnIdIsNull() {
            addCriterion("fn_id is null");
            return (Criteria) this;
        }

        public Criteria andFnIdIsNotNull() {
            addCriterion("fn_id is not null");
            return (Criteria) this;
        }

        public Criteria andFnIdEqualTo(Integer value) {
            addCriterion("fn_id =", value, "fnId");
            return (Criteria) this;
        }

        public Criteria andFnIdNotEqualTo(Integer value) {
            addCriterion("fn_id <>", value, "fnId");
            return (Criteria) this;
        }

        public Criteria andFnIdGreaterThan(Integer value) {
            addCriterion("fn_id >", value, "fnId");
            return (Criteria) this;
        }

        public Criteria andFnIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("fn_id >=", value, "fnId");
            return (Criteria) this;
        }

        public Criteria andFnIdLessThan(Integer value) {
            addCriterion("fn_id <", value, "fnId");
            return (Criteria) this;
        }

        public Criteria andFnIdLessThanOrEqualTo(Integer value) {
            addCriterion("fn_id <=", value, "fnId");
            return (Criteria) this;
        }

        public Criteria andFnIdIn(List<Integer> values) {
            addCriterion("fn_id in", values, "fnId");
            return (Criteria) this;
        }

        public Criteria andFnIdNotIn(List<Integer> values) {
            addCriterion("fn_id not in", values, "fnId");
            return (Criteria) this;
        }

        public Criteria andFnIdBetween(Integer value1, Integer value2) {
            addCriterion("fn_id between", value1, value2, "fnId");
            return (Criteria) this;
        }

        public Criteria andFnIdNotBetween(Integer value1, Integer value2) {
            addCriterion("fn_id not between", value1, value2, "fnId");
            return (Criteria) this;
        }

        public Criteria andFnNameIsNull() {
            addCriterion("fn_name is null");
            return (Criteria) this;
        }

        public Criteria andFnNameIsNotNull() {
            addCriterion("fn_name is not null");
            return (Criteria) this;
        }

        public Criteria andFnNameEqualTo(String value) {
            addCriterion("fn_name =", value, "fnName");
            return (Criteria) this;
        }

        public Criteria andFnNameNotEqualTo(String value) {
            addCriterion("fn_name <>", value, "fnName");
            return (Criteria) this;
        }

        public Criteria andFnNameGreaterThan(String value) {
            addCriterion("fn_name >", value, "fnName");
            return (Criteria) this;
        }

        public Criteria andFnNameGreaterThanOrEqualTo(String value) {
            addCriterion("fn_name >=", value, "fnName");
            return (Criteria) this;
        }

        public Criteria andFnNameLessThan(String value) {
            addCriterion("fn_name <", value, "fnName");
            return (Criteria) this;
        }

        public Criteria andFnNameLessThanOrEqualTo(String value) {
            addCriterion("fn_name <=", value, "fnName");
            return (Criteria) this;
        }

        public Criteria andFnNameLike(String value) {
            addCriterion("fn_name like", value, "fnName");
            return (Criteria) this;
        }

        public Criteria andFnNameNotLike(String value) {
            addCriterion("fn_name not like", value, "fnName");
            return (Criteria) this;
        }

        public Criteria andFnNameIn(List<String> values) {
            addCriterion("fn_name in", values, "fnName");
            return (Criteria) this;
        }

        public Criteria andFnNameNotIn(List<String> values) {
            addCriterion("fn_name not in", values, "fnName");
            return (Criteria) this;
        }

        public Criteria andFnNameBetween(String value1, String value2) {
            addCriterion("fn_name between", value1, value2, "fnName");
            return (Criteria) this;
        }

        public Criteria andFnNameNotBetween(String value1, String value2) {
            addCriterion("fn_name not between", value1, value2, "fnName");
            return (Criteria) this;
        }

        public Criteria andFnNumberIsNull() {
            addCriterion("fn_number is null");
            return (Criteria) this;
        }

        public Criteria andFnNumberIsNotNull() {
            addCriterion("fn_number is not null");
            return (Criteria) this;
        }

        public Criteria andFnNumberEqualTo(Integer value) {
            addCriterion("fn_number =", value, "fnNumber");
            return (Criteria) this;
        }

        public Criteria andFnNumberNotEqualTo(Integer value) {
            addCriterion("fn_number <>", value, "fnNumber");
            return (Criteria) this;
        }

        public Criteria andFnNumberGreaterThan(Integer value) {
            addCriterion("fn_number >", value, "fnNumber");
            return (Criteria) this;
        }

        public Criteria andFnNumberGreaterThanOrEqualTo(Integer value) {
            addCriterion("fn_number >=", value, "fnNumber");
            return (Criteria) this;
        }

        public Criteria andFnNumberLessThan(Integer value) {
            addCriterion("fn_number <", value, "fnNumber");
            return (Criteria) this;
        }

        public Criteria andFnNumberLessThanOrEqualTo(Integer value) {
            addCriterion("fn_number <=", value, "fnNumber");
            return (Criteria) this;
        }

        public Criteria andFnNumberIn(List<Integer> values) {
            addCriterion("fn_number in", values, "fnNumber");
            return (Criteria) this;
        }

        public Criteria andFnNumberNotIn(List<Integer> values) {
            addCriterion("fn_number not in", values, "fnNumber");
            return (Criteria) this;
        }

        public Criteria andFnNumberBetween(Integer value1, Integer value2) {
            addCriterion("fn_number between", value1, value2, "fnNumber");
            return (Criteria) this;
        }

        public Criteria andFnNumberNotBetween(Integer value1, Integer value2) {
            addCriterion("fn_number not between", value1, value2, "fnNumber");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table fn_info
     *
     * @mbg.generated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table fn_info
     *
     * @mbg.generated
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}